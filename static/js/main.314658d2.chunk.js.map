{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","process","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","Link","to","track_id","Tracks","undefined","Fragment","map","item","tracks_Track","Search","trackTitle","findTrack","e","preventDefault","onChange","defineProperty","target","name","onSubmit","bind","placeholder","Index","tracks_Search","tracks_Tracks","Lyrics","lyrics","match","params","id","_this$state","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","dist_default","format","first_release_date","App","context_Provider","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.314658d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.75ae2ba2.gif\";","import React from 'react'; \n\nconst Navbar = () => {\n    return (\n    \n        <nav className=\"navbar navbar-dark bg-dark mb-5\">\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">Lyrics Finder</span>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React, {Component } from 'react';\nimport axios from 'axios';\n \n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'SEARCH_TRACKS':\n            return {\n                ...state,\n                track_list: action.payload,\n                heading: 'Search Results'\n            };\n        default:\n            return state;\n    }\n    \n}\n\nexport class Provider extends Component {\n    state= {\n        \n        track_list: [],\n        heading: 'Top 10 Tracks',\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\ncomponentDidMount() {\n    axios\n        .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${\n             process.env.REACT_APP_MM_KEY\n             }`\n            )\n    .then(res => {\n        //console.log(res.data);\n        this.setState({track_list: res.data.message.body.track_list});\n    })\n    .catch(err => console.log(err));\n    \n}\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n            {this.props.children}\n            </Context.Provider>\n        );\n    }\n    \n}\n\nexport const Consumer = Context.Consumer;","import React from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => {\n    return (\n        <div>\n        <img \n        src={spinner}\n        alt=\"Loading...\"\n        style={{width: '200px', margin: '40px auto', display: 'block'}}\n        />\n        </div>\n    );\n};","import React from 'react';\nimport {Link } from 'react-router-dom';\nconst Track = (props) => {\n    const {track} = props;\n    return (\n        <div className=\"col-md-6\">\n        <div className=\"card mb-4 shadow-sm\">\n        <div className=\"card-body\">\n        <h5>{track.artist_name}</h5>\n        <p className=\"card-text\">\n        <strong><i className=\"fas fa-play\"></i> Track</strong>: {track.track_name}\n        <br/>\n        <strong><i className=\"fas fa-compact-disc\"></i> Album</strong>: {track.album_name}\n    \n        </p>\n        <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\n        <i className=\"fas fa-chevron-right\"></i> View Lyrics\n        </Link>\n        </div>\n        </div>\n        </div>\n    \n    );\n};\n\nexport default Track;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, {Component} from 'react';\nimport {Consumer} from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Track from '../tracks/Track';\n\nclass Tracks extends Component {\n    \n    render() {\n        return (\n            <Consumer>\n            { value => {\n             const { track_list, heading} = value;\n             \n            if(track_list === undefined || track_list.length === 0) {\n            return <Spinner />;\n        } else {\n           return (\n           <React.Fragment>\n               <h3 className=\"text-center mb-4\">{heading}</h3>\n               <div className=\"row\">\n               {track_list.map(item => (\n               \n               <Track \n               key={item.track.track_id} \n               track={item.track}/>\n           ))}\n               \n               </div>\n            </React.Fragment>\n           );\n        }\n                \n            }}\n            </Consumer>\n        );\n        \n    }\n}\n\nexport default Tracks;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Consumer } from '../../context';\n\n\nclass Search extends Component {\n    state = {\n        trackTitle: ''\n    };\n\nfindTrack = (dispatch, e) => {\n    e.preventDefault();\n    \n    axios\n        .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${\n             process.env.REACT_APP_MM_KEY\n             }`\n            )\n    .then(res => {\n        //console.log(res.data);\n        dispatch({\n           type: 'SEARCH_TRACKS',\n            payload: res.data.message.body.track_list\n        });\n        this.setState({trackTitle: ''});\n    })\n    .catch(err => console.log(err));\n    \n}\n\nonChange  = e => {\n    this.setState({[e.target.name]:  e.target.value});\n}\n\nrender() {\n    return (\n        <Consumer>\n        {value => {\n        const {dispatch } = value;\n         return (\n         <div className=\"card card-body mb-4 p-4\">\n         <h1 className=\"display-4 text-center\">\n         <i className=\"fas fa-music\" /> Search for a song\n         </h1>\n         <p className=\"lead text-center\">Get the lyrics for any song</p>\n         <form onSubmit={this.findTrack.bind(this, dispatch)}>\n         <div className=\"form-group\">\n         <input\n         type=\"text\"\n         className=\"form-control form-control-lg\"\n         placeholder=\"Song title... \"\n         name=\"trackTitle\"\n         value={this.state.trackTitle}\n         onChange={this.onChange}\n         />\n         \n         </div>\n        <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track Lyrics</button>\n         </form>\n         </div>\n         );\n        }}\n        </Consumer>\n    )\n}\n\n}\n\nexport default Search;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport Tracks from '../tracks/Tracks';\nimport Search from '../tracks/Search';\n\nconst Index = () => {\n  return (\n  <React.Fragment>\n      <Search />\n      <Tracks />\n  </React.Fragment>\n  ); \n};\n\nexport default Index; ","import React, { Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport Moment from 'react-moment';\n\nclass Lyrics extends Component {\n    \n    state= {\n        track: {},\n        lyrics: {}\n    };\n\ncomponentDidMount() {\n    axios\n        .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${\n             process.env.REACT_APP_MM_KEY\n             }`\n            )\n    .then(res => {\n        // console.log(res.data);\n        this.setState({lyrics: res.data.message.body.lyrics});\n        \n        \n        return axios.get(\n             `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${\n             process.env.REACT_APP_MM_KEY\n             }`\n            )\n        \n        \n        \n    })\n    .then(res => {\n        this.setState({track: res.data.message.body.track});\n    })\n    .catch(err => console.log(err));\n    \n}\n    \n    render () {\n        const {track, lyrics} = this.state;\n         console.log(track);\n        if(\n            track === undefined ||\n            lyrics === undefined ||\n            Object.keys(track).length === 0 ||\n            Object.keys(lyrics).length === 0\n            \n             \n        ) {\n           \n           return <Spinner />\n           } else {\n             return (\n                 <React.Fragment>\n                 <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\"> Go Back </Link>\n               <div className=\"card\">\n                   <h5 className=\"card-header\">\n                       {track.track_name} by <span className=\"text-secondary\">{track.artist_name}</span>\n                   </h5>\n                 <div className=\"card-body\">\n                 <p className=\"card-text\">{lyrics.lyrics_body}</p>\n                 </div>\n                </div>\n                 \n                 <ul className=\"list-group mt-3\">\n                 <li className=\"list-group-item\">\n                 <strong>Album ID</strong>: {track.album_id}\n                 </li>\n                 \n                 <li className=\"list-group-item\">\n                 <strong>Song Genre</strong>:{' '}\n                 {\n                 track.primary_genres.music_genre_list[0].music_genre\n                 .music_genre_name\n                 \n                 }\n                 \n                 </li>\n                 \n                 <li className=\"list-group-item\">\n                 <strong>Explicit Words</strong>:{' '}\n                 {track.explicit === 0 ? 'No' : 'Yes'}\n                 </li>\n                 \n                 <li className=\"list-group-item\">\n                 <strong>Release Date</strong>:{' '}\n                 <Moment format=\"DD/MM/YYYY\">{track.first_release_date}</Moment>\n                 </li>\n                 \n                 \n                 \n                 </ul>\n                 \n                 </React.Fragment>\n               );\n           }\n    }\n}\n\nexport default Lyrics;\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\n\nimport {Provider} from './context';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n        <Router>\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container\">\n        <Switch>\n        <Route exact path=\"/\" component={Index} />\n        <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n        </Switch>\n        </div>\n      </React.Fragment>\n        </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}